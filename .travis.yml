dist: trusty
sudo: required

language: cpp

branches:
  only:
    - master

before_install:
  - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
  - sudo apt-get update -qq

install:
  - sudo apt-get install -y --force-yes -qq g++-6 gcc-6; export CXX="g++-6" CC="gcc-6"; $CXX --version
  - sudo apt-get install -y --force-yes -qq wine

script:
# Build toolchain and libs
  - export WINEDEBUG=-all
  - export CEDEV=~/CEdev
  - export PATH=$CEDEV/bin/:$PATH
  - export AUTOTESTER_LIBS_DIR=$(pwd)/clibraries
  - make
  - make install
  - make release
  - make release-libs
# Build examples
  - make -C $CEDEV/examples
# Build CEmu core and autotester_cli
  - git clone --recursive -b latest-stable --depth 1 https://github.com/CE-Programming/CEmu.git
  - make -C CEmu/core -j4 CC=gcc-6 CXX=g++-6 LINK=g++-6
  - make -C CEmu/tests/autotester -j4 CC=gcc-6 CXX=g++-6 LINK=g++-6
  - export PATH=$(pwd)/CEmu/tests/autotester:$PATH
# Grab ROM for tests below
  - export ROM_FILE_NAME=84pce_515_53.rom
  - curl -s https://travis:$ROM_GETTER_PASS@tiplanet.org/scripts/travis/$ROM_FILE_NAME 2>/dev/null > $ROM_FILE_NAME
  - export AUTOTESTER_ROM=$(pwd)/$ROM_FILE_NAME
# Test toolchain examples
  - RESULT=0; for f in $CEDEV/examples/*/*.json; do echo "Launching autotester on $f"; autotester "$f"; RESULT=`expr $RESULT + $?`; done; return $RESULT

after_success:
# Build the doxygen
  - curl -fsSL ftp://ftp.stack.nl/pub/users/dimitri/doxygen-1.8.13.linux.bin.tar.gz | tar xz
  - export PATH="$PWD/doxygen-1.8.13/bin:$PATH"
  - make doxygen
  - bash .deploy.sh

notifications:
  irc:
    channels:
      - "irc.choopa.net#ez80-dev"
    on_success: change
    on_failure: always
    skip_join: true
