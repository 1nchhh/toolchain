language: cpp

branches:
  only:
    - master

before_install:
  - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
  - sudo add-apt-repository ppa:kalakris/cmake -y
  - sudo apt-get update -qq

install:
  - sudo apt-get install -y --force-yes -qq g++-6 gcc-6; export CXX="g++-6" CC="gcc-6"; $CXX --version
  - sudo apt-get install -y --force-yes -qq wine
  - sudo apt-get install -y --force-yes -qq cmake

script:
# Build toolchain and libs
  - export WINEDEBUG=-all
  - export CEDEV=~/CEdev
  - export PATH=$CEDEV/bin/:$PATH
  - export AUTOTESTER_LIBS_DIR=$(pwd)/clibraries
  - make
  - make install
  - make dist
  - make dist-libs
# Build examples
  - make -C $CEDEV/examples
# Build CEmu core and autotester_cli
  - git clone https://github.com/CE-Programming/CEmu.git
  - make -C CEmu/core -j4 CC=gcc-6 CXX=g++-6 LINK=g++-6
  - make -C CEmu/tests/autotester -j4 CC=gcc-6 CXX=g++-6 LINK=g++-6
  - export PATH=$(pwd)/CEmu/tests/autotester:$PATH
# Grab ROM for tests below
  - curl -s https://travis:$ROM_GETTER_PASS@tiplanet.org/scripts/travis/84pce_515_521.rom 2>/dev/null > 84pce_515_521.rom
  - export AUTOTESTER_ROM=$(pwd)/84pce_515_521.rom
# Test toolchain examples
  - RESULT=0; for f in $CEDEV/examples/*/*.json; do echo "Launching autotester on $f"; autotester "$f"; RESULT=`expr $RESULT + $?`; done; return $RESULT

after_success:
# Build the doxygen
  - git clone https://github.com/doxygen/doxygen.git doc
  - cd doc
  - mkdir build
  - cd build
  - cmake -G "Unix Makefiles" ..
  - make
  - make install
  - cd ../..
  - make doxygen
  - bash deploy.sh

notifications:
  irc:
    channels:
      - "irc.choopa.net#ez80-dev"
    on_success: change
    on_failure: always
    skip_join: true

env:
  global:
    secure: B4fGooSHsmOl+eRBEGLXq5Clb64p47t+hdI8MnKnzZX/28nnkhti2xqqXMGOYNB+U0yHRGDKss4bFYq5AKdrq8ckTBsSSPZdLpCknYALqsE6+uuvYVvaaiV5hzGiXHZ+ULFidCR5gv7JXorL4PG9llIT9Nu7V4j5/xTVYoHYzDcyKGiX96FAwOOsLHvL3QJgLIP00CpluhJ1cduOedp9hpQjRFwJ/5YGNGvtbk98zVEnjprf8Pzrr9HW9FTBF91JkYd3R/oayDQUojDT/+CfDgQJh20LYoNDeFi3vOGn4j5a+n1MKSlmneuqb4+W5nBQGr+kKFMBkUJX+1EC3+fOHFjx808e/H7xLiKjm2Q/dbmQ9tFOLJR+mtww/ylx5NS9FoG4HIZFfgZsFw45bwY+bsXJAUUDNYcSHjrg9ix4Cx8s2cumRLQt8VUSebmXTEEDcLMFvL8+UBrMjVhJ7em6e6QXKl7qYo5KcZz8ktkMxawfEeFUwmnpSNPOT438elytGURzR7ll5cbmNXoytbRA7jJpbvDzdC+ulI0CLukoR+zlPn3qIrzHYmwXp1Zul44FHIabQdEIaPkYEUUIeJxTzN3FEyC5cL4CsA92dwmon/V6gsvs6rX5921BUjmFktd4z+s733bWIl8bfqOTp60XNG28Advda72xMdzMemMVcgI=
