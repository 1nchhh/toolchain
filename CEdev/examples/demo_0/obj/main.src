; Zilog eZ80 ANSI C Compiler Release 3.4
; -nomodsect -optspeed -noreduceopt -peephole -globalopt
; -localcse -const=ROM 
	FILE	"..\SRC\MAIN.C"
	.assume ADL=1
	SEGMENT TEXT
_HelloWorld:
	DB	72
	DB	101
	DB	108
	DB	108
	DB	111
	DB	32
	DB	87
	DB	111
	DB	114
	DB	108
	DB	100
	DB	33
	DB	0
_Welcome:
	DB	87
	DB	101
	DB	108
	DB	99
	DB	111
	DB	109
	DB	101
	DB	32
	DB	116
	DB	111
	DB	32
	DB	67
	DB	33
	DB	0
	SEGMENT DATA
_Apples:
	DB	65
	DB	112
	DB	112
	DB	108
	DB	101
	DB	115
	DB	33
	DB	0
_Oranges:
	DB	79
	DB	114
	DB	97
	DB	110
	DB	103
	DB	101
	DB	115
	DB	0
;    1	/* Keep these headers */
;    2	#include <stdbool.h>
;    3	#include <stddef.h>
;    4	#include <stdint.h>
;    5	#include <tice.h>
;    6	
;    7	/* Standard headers - it's recommended to leave them included */
;    8	#include <math.h>
;    9	#include <stdio.h>
;   10	#include <stdlib.h>
;   11	#include <string.h>
;   12	
;   13	/* Other available headers */
;   14	// stdarg.h, setjmp.h, assert.h, ctype.h, float.h, iso646.h, limits.h, errno.h, debug.h
;   15	
;   16	/* Put function prototypes here */
;   17	void printText(const char *text, uint8_t x, uint8_t y);
;   18	void printTextSmall(const char *text, uint8_t xpos, uint8_t ypos);
;   19	
;   20	/* Initialize some strings -- It is faster to place strings as globals */
;   21	const char HelloWorld[] = "Hello World!";
;   22	const char Welcome[] = "Welcome to C!";
;   23	char Apples[] = "Apples!";
;   24	char Oranges[] = "Oranges";
	SEGMENT CODE
;   25	
;   26	/* Put all your code here */
;   27	void main(void) {
_main:
	LD	HL,-1
	CALL	__frameset
;   28	    /* uint8_t is an unsigned integer that can range from 0-255. It generally performs faster than just an int, so try to use it when possible */
;   29	    uint8_t count;
;   30	
;   31	    /* This function cleans up the screen and gets everything ready for the OS */
;   32	    pgrm_CleanUp();
	CALL	_pgrm_CleanUp
;   33	    
;   34	    /* Print a few strings */
;   35	    printText(HelloWorld, 0, 0);
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_HelloWorld
	PUSH	BC
	CALL	_printText
	POP	BC
	POP	BC
	POP	BC
;   36	    printText(Welcome, 0, 1);
	LD	BC,1
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,_Welcome
	PUSH	BC
	CALL	_printText
	POP	BC
	POP	BC
	POP	BC
;   37	    
;   38	    /* This will print 'Apples' */
;   39	    for(count=3; count<6; count++) {
	LD	(IX+-1),3
	JR	L_3
L_1:
;   40	        printText(Apples, 0, count);
	LD	C,(IX+-1)
	LD	B,0
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,_Apples
	PUSH	BC
	CALL	_printText
	POP	BC
	POP	BC
	POP	BC
	INC	(IX+-1)
;   41	    }
L_3:
	LD	A,(IX+-1)
	CP	A,6
	JR	C,L_1
;   42	    
;   43	    /* Copy the 'Oranges' string to the 'Apples' location */
;   44	    strcpy(Apples, Oranges);
	LD	BC,_Oranges
	PUSH	BC
	LD	BC,_Apples
	PUSH	BC
	CALL	_strcpy
	POP	BC
	POP	BC
;   45	    
;   46	    /* This will print 'Oranges'. Therefore, apples are oranges */
;   47	    for(count=6; count<9; count++) {
	LD	(IX+-1),6
	JR	L_8
L_6:
;   48	        printText(Apples, 0, count);
	LD	C,(IX+-1)
	LD	B,0
	PUSH	BC
	LD	BC,0
	PUSH	BC
	LD	BC,_Apples
	PUSH	BC
	CALL	_printText
	POP	BC
	POP	BC
	POP	BC
	INC	(IX+-1)
;   49	    }
L_8:
	LD	A,(IX+-1)
	CP	A,9
	JR	C,L_6
;   50	    
;   51	    /* Do not use os_GetKey() in your programs; this is just a demo */
;   52	    os_GetKey();
	CALL	_os_GetKey
;   53	    
;   54	    /* Clean up, and exit */
;   55	    pgrm_CleanUp();
	CALL	_pgrm_CleanUp
;   56	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _main ***************************
;Name                         Addr/Register   Size   Type
;_os_GetKey                          IMPORT  -----   function
;_Oranges                            STATIC      8   variable
;_strcpy                             IMPORT  -----   function
;_Apples                             STATIC      8   variable
;_Welcome                            STATIC     14   variable
;_HelloWorld                         STATIC     13   variable
;_printText                          IMPORT  -----   function
;_pgrm_CleanUp                       IMPORT  -----   function
;count                                 IX-1      1   variable


; Stack Frame Size: 7 (bytes)
;       Spill Code: 0 (instruction)


;   57	
;   58	/* Draw text on the homescreen at the given X/Y location */
;   59	void printText(const char *text, uint8_t xpos, uint8_t ypos) {
_printText:
	CALL	__frameset0
;   60	    os_SetCursorPos(ypos, xpos);
	LD	C,(IX+9)
	LD	B,0
	PUSH	BC
	LD	C,(IX+12)
	PUSH	BC
	CALL	_os_SetCursorPos
	POP	BC
	POP	BC
;   61	    os_PutStrFull(text);
	LD	BC,(IX+6)
	PUSH	BC
	CALL	_os_PutStrFull
	POP	BC
;   62	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _printText ***************************
;Name                         Addr/Register   Size   Type
;_os_PutStrFull                      IMPORT  -----   function
;_os_SetCursorPos                    IMPORT  -----   function
;ypos                                 IX+12      1   parameter
;xpos                                  IX+9      1   parameter
;text                                  IX+6      3   parameter


; Stack Frame Size: 15 (bytes)
;       Spill Code: 0 (instruction)


;   63	
;   64	/* Draw small text at the given X/Y location */
;   65	void printTextSmall(const char *text, uint8_t xpos, uint8_t ypos) {
_printTextSmall:
	CALL	__frameset0
;   66	    os_FontDrawText(text, xpos, ypos);
	LD	C,(IX+12)
	LD	B,0
	PUSH	BC
	LD	C,(IX+9)
	PUSH	BC
	LD	BC,(IX+6)
	PUSH	BC
	CALL	_os_FontDrawText
	POP	BC
	POP	BC
	POP	BC
	LD	SP,IX
	POP	IX
	RET	


;**************************** _printTextSmall ***************************
;Name                         Addr/Register   Size   Type
;_os_FontDrawText                    IMPORT  -----   function
;ypos                                 IX+12      1   parameter
;xpos                                  IX+9      1   parameter
;text                                  IX+6      3   parameter


; Stack Frame Size: 15 (bytes)
;       Spill Code: 0 (instruction)


	XREF _strcpy:ROM
	XREF _os_PutStrFull:ROM
	XREF _os_FontDrawText:ROM
	XREF _os_SetCursorPos:ROM
	XREF _os_GetKey:ROM
	XREF _pgrm_CleanUp:ROM
	XREF __frameset0:ROM
	XREF __frameset:ROM
	XDEF _printTextSmall
	XDEF _printText
	XDEF _main
	XDEF _Oranges
	XDEF _Apples
	XDEF _Welcome
	XDEF _HelloWorld
	END
