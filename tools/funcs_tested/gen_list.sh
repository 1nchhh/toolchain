#!/bin/bash
# Adrien 'Adriweb' Bertrand
# Tool to generate a list of things that are used/tested in the toolchain example codes.
# Dependencies: universal-ctags

set -e

# Grab current path
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Let's go back to the root of the toolchain
cd $DIR/../../

# All header files we want to extract prototypes from
files="src/fileioc/fileioc.h src/graphx/graphx.h src/keypadc/keypadc.h src/ce/tice.h src/ce/decompress.h src/ce/debug.h"

# The destination markdown file
outfile=$DIR/tested-functions-list.md

# Find once the example sources we'll be searching in
exampleFiles=$(find ./examples -type f \( -iname '*.c' -o -iname '*.cpp' -o -iname '*.h' -o -iname '*.hpp' -o -iname '*.asm' \))

echo "## List of tested functions" > $outfile

for f in $files
do
    echo -e "\n### $f" >> $outfile
    echo -e "| Function | Tested? | Search link |" >> $outfile
    echo -e "| -------- | ------- | ----------- |" >> $outfile

    # This will produce a list of funcName:funcLine, which we'll parse in the for loop below.
    filefuncts=$(ctags -u --fields=n --c-kinds=p --output-format=json $f | sed -e 's/.*"name": "\(.*\)", "path.*"line": \(.*\)}/\1:\2/g')
    totalFuncs=0
    totalTested=0
    for funcAndLine in $filefuncts
    do
        ((totalFuncs++))
        func=${funcAndLine%:*}
        line=${funcAndLine##*:}
        count=$(grep -l "\b${func}\b" ${exampleFiles} | wc -l | awk '{print $1}')
        if [[ "$count" == "0" ]]
        then
            foundStr="âœ—"
            searchLink=""
        else
            ((totalTested++))
            foundStr="YES (x$count)"
            searchLink="[occurrences](https://github.com/search?q=${func}+repo%3ACE-Programming%2Ftoolchain+path%3Aexamples&type=Code)"
        fi
        echo -e "| [\`${func}\`](/${f}#L${line}) | $foundStr | $searchLink" >> $outfile
    done
    echo -e "\n**Total: ${totalTested}/${totalFuncs} tested.**" >> $outfile
done

echo -e "\n\n---\n*Generated by [gen_list.sh](/tools/funcs_tested/gen_list.sh)*" >> $outfile

cat $outfile
