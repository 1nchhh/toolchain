	assume	adl=1

	public	__llrems
__llrems:

	scf
virtual
	jr	nc, $ + 2
	load .jr_nc: 1 from $$
end virtual
	db	.jr_nc

	public	__lldivs
__lldivs:

	or	a, a

	push	iy
	push	af

	ld	iy, 2
	add	iy, sp

	ld	a, (iy + 14)
	cp	a, $80
	jr	c, .neg_divisor_skip

	push	de
	push	hl

	ld	de, (iy + 7)
	sbc	hl, hl
	sbc	hl, de
	ld	(iy + 7), hl
	ld	de, (iy + 10)
	ld	hl, 0
	sbc	hl, de
	ld	(iy + 10), hl
	ld	de, (iy + 13)
	sbc	hl, hl
	or	a, a
	sbc	hl, de
	ld	(iy + 13), hl

	pop	hl
	pop	de
.neg_divisor_skip:

	xor	a, b
	ld	(iy + 15), a

	pop	af
	push	af
	ld	a, b
	jr	nc, .rem_save_sign_skip
	ld	(iy + 15), a
.rem_save_sign_skip:

	add	a, a
	call	c, __llneg

	call	__lldvrmu.hijack

	pop	af
	jr	c, .div_quotient_skip
	ld	hl, (iy + 15)
	ld	de, (iy + 18)
	ld	bc, (iy + 21)
.div_quotient_skip:

	bit	7, (iy + 23)
	call	nz, __llneg

	pop	iy

	ret

	extern	__lldvrmu.hijack
	extern	__llneg
