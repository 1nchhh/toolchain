	assume	adl=1

	public __smuls
__smuls:
	public __smulu
__smulu:

; Multiplies HL by BC and returns the 16-bit product hl.
;    I: BC=multiplier, HL=multiplicand
;    O: a=h, ubc=C*H, ude=B*L, hl=DE*HL, hlu=0
;   FO: sz(h), p/v=?, c=?
;   CC: 16*r(PC)+(ADL?3*r(SPL):2*r(SPS))+13
			; a			ubc	ude	uhl
Mul_HL_BC_HL:		;----------------------+-------+-------+------------------------
	ld d,b
	ld e,l		; 				 de=BL
	ld b,h		;			 bc=HC
	ld h,c		;					 hl=CL
	mlt bc		; 			ubc=C*H
	mlt de		;				ude=B*L
	mlt hl		;					uhl=C*L
	ld a,h		; a=(C*L>>8)
	add a,c		; a=(C*L>>8)+(C*H)
	add a,e		; a=(C*L>>8)+(C*H)+(B*L)
	ld h,a		;					 hl=C*L+((C*H)+(B*L)<<8)
	ret

; (HL*BC)&0xFFFF=(C*L+((B*L)+(C*H)<<8)+(B*H<<16))&0xFFFF
;		=((C*L)&0xFFFF)+((B*L)+(C*H)<<8&0xFFFF)+(B*H<<16&0xFFFF)
;		=C*L+((B*L)+(C*H)<<8&0xFFFF)
